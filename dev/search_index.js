var documenterSearchIndex = {"docs":
[{"location":"vanderpol/","page":"Nonlinear Oscillator","title":"Nonlinear Oscillator","text":"#van der Pol Oscillator","category":"page"},{"location":"nbody/","page":"N-Body Gravity","title":"N-Body Gravity","text":"#N-body Gravitational Problems","category":"page"},{"location":"wave1D/#The-Classical-Wave-Equation-in-1D","page":"Wave Equation","title":"The Classical Wave Equation in 1D","text":"","category":"section"},{"location":"wave1D/","page":"Wave Equation","title":"Wave Equation","text":"The classical wave equation one dimension and Cartesian coordinates is","category":"page"},{"location":"wave1D/","page":"Wave Equation","title":"Wave Equation","text":"fracpartial^2 phipartial^2 t - c^2fracpartial^2 phipartial^2 x = 0","category":"page"},{"location":"wave1D/","page":"Wave Equation","title":"Wave Equation","text":"where c is the wave speed. To simplify the notation,  we write define the notation that","category":"page"},{"location":"wave1D/","page":"Wave Equation","title":"Wave Equation","text":"phi_t equiv fracpartial phipartial t","category":"page"},{"location":"wave1D/","page":"Wave Equation","title":"Wave Equation","text":"To solve this equation numerically, we rewrite this  second-order equation as first-order differential equations.   Let's define the first order variables","category":"page"},{"location":"wave1D/","page":"Wave Equation","title":"Wave Equation","text":"beginalign\nPi = phi_t\nPhi = phi_x\nendalign","category":"page"},{"location":"wave1D/","page":"Wave Equation","title":"Wave Equation","text":"then the wave equation can be written","category":"page"},{"location":"wave1D/","page":"Wave Equation","title":"Wave Equation","text":"Pi_t = c^2Phi_x","category":"page"},{"location":"wave1D/","page":"Wave Equation","title":"Wave Equation","text":"A second equation comes from the integration condition that mixed partial derivatives commute","category":"page"},{"location":"wave1D/","page":"Wave Equation","title":"Wave Equation","text":"fracpartial^2 phipartial t partial x = fracpartial^2 phipartial x partial t","category":"page"},{"location":"wave1D/","page":"Wave Equation","title":"Wave Equation","text":"In first-order form, this condition is","category":"page"},{"location":"wave1D/","page":"Wave Equation","title":"Wave Equation","text":"Phi_t = Pi_x","category":"page"},{"location":"wave1D/","page":"Wave Equation","title":"Wave Equation","text":"The system of equations that we will solve is","category":"page"},{"location":"wave1D/","page":"Wave Equation","title":"Wave Equation","text":"beginalign\nPi_t = cPhi_x\nPhi_t = Pi_x\nendalign","category":"page"},{"location":"maxwell/#Maxwell-Equations","page":"Maxwell","title":"Maxwell Equations","text":"","category":"section"},{"location":"maxwell/","page":"Maxwell","title":"Maxwell","text":"Finite Difference Time Domain Maxwell Equations","category":"page"},{"location":"maxwell/","page":"Maxwell","title":"Maxwell","text":"The simple example solves the Maxwell equations in two dimensions.","category":"page"},{"location":"maxwell/#Equations-of-motion","page":"Maxwell","title":"Equations of motion","text":"","category":"section"},{"location":"maxwell/","page":"Maxwell","title":"Maxwell","text":"The Maxwell equations are","category":"page"},{"location":"maxwell/","page":"Maxwell","title":"Maxwell","text":"nabla times E = -fracpartial Bpartial t","category":"page"},{"location":"maxwell/","page":"Maxwell","title":"Maxwell","text":"beginaligned\nnablacdotmathbfE  = 4 pi rho \nnablacdotmathbfB  = 0 \nnablatimesmathbfE = - frac1c fracpartialmathbfBpartial t \nnablatimesmathbfB = - frac1c left(4 pi mathbfJ + fracpartialmathbfEpartial t right)\nendaligned","category":"page"},{"location":"maxwell/#Numerical-method","page":"Maxwell","title":"Numerical method","text":"","category":"section"},{"location":"maxwell/#Try-it-out","page":"Maxwell","title":"Try it out","text":"","category":"section"},{"location":"euler/#The-Euler-Method","page":"Euler's Method","title":"The Euler Method","text":"","category":"section"},{"location":"euler/#A-Simple-Differential-Equation","page":"Euler's Method","title":"A Simple Differential Equation","text":"","category":"section"},{"location":"euler/","page":"Euler's Method","title":"Euler's Method","text":"When learning numerical methods for solving equations, it's often best to begin with simple problems with known solutions.  Then we can easily see the strengths and weaknesses of different numerical methods.","category":"page"},{"location":"euler/","page":"Euler's Method","title":"Euler's Method","text":"We can begin with the simple differential equation","category":"page"},{"location":"euler/","page":"Euler's Method","title":"Euler's Method","text":"fracdydx = lambda y","category":"page"},{"location":"euler/","page":"Euler's Method","title":"Euler's Method","text":"where lambda is a constant.  The solution to this equation is","category":"page"},{"location":"euler/","page":"Euler's Method","title":"Euler's Method","text":"y = e^lambda x","category":"page"},{"location":"euler/","page":"Euler's Method","title":"Euler's Method","text":"which can be found directly by integration.","category":"page"},{"location":"euler/#A-Discrete-Solution","page":"Euler's Method","title":"A Discrete Solution","text":"","category":"section"},{"location":"euler/","page":"Euler's Method","title":"Euler's Method","text":"Numerical methods for differential equations are based on the idea of discretization, where continuous functions become discrete functions defined only at specific points.  Operators, like the derivative or integral, are then approximated by algebraic operators, that can be easily programmed for a computer.","category":"page"},{"location":"euler/","page":"Euler's Method","title":"Euler's Method","text":"To discretize this differential equation, we define the function y(x) at discrete points x_k.  Here k is an index that labels the points.  For simplicity, we will use a set of points with uniform spacing, h, defined as","category":"page"},{"location":"euler/","page":"Euler's Method","title":"Euler's Method","text":"x_k = x_0 + k h","category":"page"},{"location":"euler/","page":"Euler's Method","title":"Euler's Method","text":"for some constant x_0.","category":"page"},{"location":"euler/","page":"Euler's Method","title":"Euler's Method","text":"The derivative is formally defined as ","category":"page"},{"location":"euler/","page":"Euler's Method","title":"Euler's Method","text":"fracdydx equiv lim_Delta xto 0 fracy(x+Delta x) - y(x)Delta x","category":"page"},{"location":"euler/","page":"Euler's Method","title":"Euler's Method","text":"where the limit is taken as Delta x goes to zero.  We can approximate this operation for discrete functions by dropping the limit and using a  small, but finite, value for Delta x.  The derivative could then be approximated as","category":"page"},{"location":"euler/","page":"Euler's Method","title":"Euler's Method","text":"fracdydx simeq fracy(x+h) - y(x)h","category":"page"},{"location":"euler/","page":"Euler's Method","title":"Euler's Method","text":"where h is some small number. We might assume that the smaller h is, the better that this discrete derivative approximates the real derivative.  This turns out to be true.","category":"page"},{"location":"euler/","page":"Euler's Method","title":"Euler's Method","text":"Using this approximation of the derivative, we can now try solving the differential equation, fracdydx = lambda y  We first define some notation.  As y is defined only at points x_k,  we let y_k = y(x_k)  Then, we can write the differential equation","category":"page"},{"location":"euler/","page":"Euler's Method","title":"Euler's Method","text":"fracy_k+1 - y_kh = lambda y_k","category":"page"},{"location":"euler/","page":"Euler's Method","title":"Euler's Method","text":"We can rewrite this as","category":"page"},{"location":"euler/","page":"Euler's Method","title":"Euler's Method","text":"y_k+1 = y_k + hlambda y_k = (1+hlambda)y_k","category":"page"},{"location":"euler/","page":"Euler's Method","title":"Euler's Method","text":"If we know the solution at x_k, we can find the solution at the  next point x_k+1 using this equation.","category":"page"},{"location":"euler/#Example","page":"Euler's Method","title":"Example","text":"","category":"section"},{"location":"euler/","page":"Euler's Method","title":"Euler's Method","text":"The Jupyter notebook EulerMethod.ipynb demonstrates the Euler method to solve the ODE","category":"page"},{"location":"euler/#Going-Further","page":"Euler's Method","title":"Going Further","text":"","category":"section"},{"location":"euler/","page":"Euler's Method","title":"Euler's Method","text":"Try solving some different ODEs with the Euler method. For example, solve","category":"page"},{"location":"euler/","page":"Euler's Method","title":"Euler's Method","text":"fracdydx = -x y","category":"page"},{"location":"euler/","page":"Euler's Method","title":"Euler's Method","text":"on the domain xin05 with the initial value y(0)=2.  The exact solution has the form","category":"page"},{"location":"euler/","page":"Euler's Method","title":"Euler's Method","text":"y = A e^-x^22","category":"page"},{"location":"euler/","page":"Euler's Method","title":"Euler's Method","text":"Try solving a system of equations","category":"page"},{"location":"euler/","page":"Euler's Method","title":"Euler's Method","text":"beginaligned\nfracdudx = 3u + 2y\nfracdydx = 4u + y\nendaligned","category":"page"},{"location":"euler/","page":"Euler's Method","title":"Euler's Method","text":"on the domain 0le tle 1 with the initial conditions u(0) = 0 and y(0) = 1  Try different values of h, such as  h = 02 01 005 0025.","category":"page"},{"location":"euler/","page":"Euler's Method","title":"Euler's Method","text":"How does the error in the Euler method depend on the  discrete step size h?  Hint. Expand the function y(x+h) in a Taylor series about x","category":"page"},{"location":"euler/","page":"Euler's Method","title":"Euler's Method","text":"y(x+h) = y(x) + fracdydx h + fracd^2ydx^2 h^2","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = numex","category":"page"},{"location":"#numex","page":"Home","title":"numex","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"General relativity is Albert Einstein's theory of gravitation. Gravity in our own solar system is relatively weak, and Newton's  law of universal gravitation works very well for most purposes. General relativity predicts new gravitational phenomena, such as black holes, neutron stars, an expanding universe, and gravitational radiation.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Gravitational waves are generated by accelerating masses. They are analogous to electromagnetic radiation and carry information  about changes in the gravitational field.  Gravitational waves have recently been discovered by the gravitational wave observatories LIGO and Virgo. These waves are created in merging binaries with either black holes or neutron stars.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Unfortunately, the Einstein equations of general relativity are very difficult to solve, especially for the binary systems that generate  gravitational waves.  The equations can be solved with numerical methods on supercomputers, and now even on some home computers.  Learning the techniques of numerical relativity takes a lot of time, because it requires background in general relativity, numerical analysis,  and computer skills.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The purpose of this project is to give some examples for beginners of solving equations numerically.  These notes begin with some some examples solving ordinary differential equations.  They usually begin with some easier examples, then progress to cases that require some general relativity.  This way the reader can see how these techniques can be used in relativity research.  ","category":"page"},{"location":"","page":"Home","title":"Home","text":"The different examples are listed in the tabs on the left.  The documentation briefly describes the equations and the numerical methods used  to find the solution.  Example Jupyter notebooks are found in the example directory of the numex repository.","category":"page"},{"location":"","page":"Home","title":"Home","text":"While I wish that these notes could be more pedagogical, for now the descriptions are brief, with pointers to other published materials. You may need to ask your teacher or instructor for additional help to supplement these examples. Finally, each section ends with project ideas  that a student could pursue to gain additional skills.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The source code for this project is written in Julia  and can be accessed in the GitHub repository  numex. ","category":"page"},{"location":"#What-is-Julia?","page":"Home","title":"What is Julia?","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Julia is a  modern dynamic language similar to Python. Julia is fast, easily parallelized, and ideal for scientific computing, while also being easy to use. Julia uses just-in-time compilation to native computer code, which makes  its performance nearly as fast as native C code. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [numex]","category":"page"},{"location":"sho/#The-Simple-Harmonic-Oscillator","page":"Simple Oscillator","title":"The Simple Harmonic Oscillator","text":"","category":"section"},{"location":"sho/","page":"Simple Oscillator","title":"Simple Oscillator","text":"As mentioned before, it is good to test numerical methods with problems with known solutions.  In this example we will use the simple harmonic oscillator.","category":"page"},{"location":"sho/","page":"Simple Oscillator","title":"Simple Oscillator","text":"We will build on the previous example in two ways.  First, we  solve a system of differential equations, and we will improve on Euler method.","category":"page"},{"location":"sho/#The-Differential-Equation-and-Solution","page":"Simple Oscillator","title":"The Differential Equation and Solution","text":"","category":"section"},{"location":"sho/","page":"Simple Oscillator","title":"Simple Oscillator","text":"Let's now consider the simple harmonic oscillator","category":"page"},{"location":"sho/","page":"Simple Oscillator","title":"Simple Oscillator","text":"fracd^2 ydt^2 = -omega^2 y","category":"page"},{"location":"sho/","page":"Simple Oscillator","title":"Simple Oscillator","text":"The equation is solved on a domain 0 le t as an initial value problem, with y(0) and \\dot y(0) specified at the initial time. The solution of this equation can be written","category":"page"},{"location":"sho/","page":"Simple Oscillator","title":"Simple Oscillator","text":"y(t) = A sin(omega t) + Bcos(omega t)","category":"page"},{"location":"sho/","page":"Simple Oscillator","title":"Simple Oscillator","text":"where the constants A and B are chosen to match the initial conditions.  For simplicity, we use the notation that a dot over a variable represents a time derivative","category":"page"},{"location":"sho/","page":"Simple Oscillator","title":"Simple Oscillator","text":"dot y equiv fracdydt","category":"page"},{"location":"sho/#Writing-as-a-First-Order-System","page":"Simple Oscillator","title":"Writing as a First-Order System","text":"","category":"section"},{"location":"sho/","page":"Simple Oscillator","title":"Simple Oscillator","text":"The simple harmonic oscillator equation (SHO) is a second-order equation. Many numerical methods for the initial value problem have been developed for first-order equations.  We can rewrite the SHO as a  system of first-order equations by introducing a new variable u = dot y. Then","category":"page"},{"location":"sho/","page":"Simple Oscillator","title":"Simple Oscillator","text":"beginaligned\ndot y = u\ndot u = -omega^2 y\nendaligned","category":"page"},{"location":"sho/#The-Midpoint-Method","page":"Simple Oscillator","title":"The Midpoint Method","text":"","category":"section"},{"location":"sho/","page":"Simple Oscillator","title":"Simple Oscillator","text":"While the Euler method is very simple to use, the method is not very accurate. The Midpoint method is a similar method, but has higher accuracy.   Consider the differential equation","category":"page"},{"location":"sho/","page":"Simple Oscillator","title":"Simple Oscillator","text":"fracdydt = f(ty)","category":"page"},{"location":"sho/","page":"Simple Oscillator","title":"Simple Oscillator","text":"The Euler method approximates the derivative dydt as a constant f(t_i) over the domain t_it_i+1, or","category":"page"},{"location":"sho/","page":"Simple Oscillator","title":"Simple Oscillator","text":"y_i+1 = y_i   + Delta t f(t_iy_i)","category":"page"},{"location":"sho/","page":"Simple Oscillator","title":"Simple Oscillator","text":"A better approximation might be to use the value of the derivative at the midpoint of t_i and t_i+1, rather than at the endpoint t_i, so that","category":"page"},{"location":"sho/","page":"Simple Oscillator","title":"Simple Oscillator","text":"y_i+1 = y_i   + Delta t f(t_i+12 y_i+12)","category":"page"},{"location":"sho/","page":"Simple Oscillator","title":"Simple Oscillator","text":"But how do we find the value of y_i+12?  We could use an Euler step of Delta t2.  Thus, the midpoint method is a two-step method. We first approximate the solution at t_i+12 using the Euler method, then we go back to t_i and take a full step with the derivative evaluated at t_i+12","category":"page"},{"location":"sho/","page":"Simple Oscillator","title":"Simple Oscillator","text":"beginaligned\ny_i+12 =  y_i   + frac12Delta t f(t_iy_i)\ny_i+1 =  y_i   + frac12Delta t f(t_i+12y_i+12)\nendaligned","category":"page"},{"location":"sho/#Other-Second-Order-Methods","page":"Simple Oscillator","title":"Other Second-Order Methods","text":"","category":"section"},{"location":"sho/","page":"Simple Oscillator","title":"Simple Oscillator","text":"The Midpoint method is not the only integrator with second-order accuracy. There is a larger class of Runge-Kutta integrators of different orders, and this is just one of the second-order Runge-Kutta methods, sometimes  called RK2 methods.  A second RK2 method is","category":"page"},{"location":"sho/","page":"Simple Oscillator","title":"Simple Oscillator","text":"beginaligned\ny^star =  y_i   + Delta t f(t_iy_i)\ny_i+1 =  y_i   + frac12Delta t \nleft( f(t_iy_i) + f(t_i+1y^star)right)\nendaligned","category":"page"},{"location":"sho/","page":"Simple Oscillator","title":"Simple Oscillator","text":"Beginning with the derivative at the left end-point, f(t_i y_i), the Euler method is used to approximate the derivative at the right end-point, f(t_i+1y^star).  We see that y^star is a first approximation to y_i+1, and this step is called the predictor step. The approximation to y_i+1 is refined by stepping from t_i to t_i+1 using the average of the two derivatives. This is the corrector step of the algorithm.  ","category":"page"},{"location":"sho/#Convergence","page":"Simple Oscillator","title":"Convergence","text":"","category":"section"},{"location":"sho/","page":"Simple Oscillator","title":"Simple Oscillator","text":"The Euler method is only first-order accurate, which means that the  error in the discrete solution is proportional to the step-size Delta t. This is often written as rm O(Delta t). If the step size is reduced by a factor of 2, then the error also  drops by factor of 2.  However, the higher-resolution solution requires even more work to compute, as it doubles the number of steps to reach the final time.  ","category":"page"},{"location":"sho/","page":"Simple Oscillator","title":"Simple Oscillator","text":"The Midpoint method is second-order accurate, or rm O(Delta t^2. If the step size is reduced by a factor or 2, then the error drops by a factor of 2^2=4.  As the higher-order solution typically only doubles the amount of work done, this is advantageous because the error  drops faster than the increase in workload.   Even higher order methods could be advantageous by this analysis.  The fourth-order Runge-Kutta method, with rm O(Delta t^2), is widely used for many conventional ODE systems.","category":"page"},{"location":"sho/#The-DifferentialEquations.jl-Package","page":"Simple Oscillator","title":"The DifferentialEquations.jl Package","text":"","category":"section"},{"location":"sho/","page":"Simple Oscillator","title":"Simple Oscillator","text":"There are many different numerical algorithms for solving ODEs.  Some are very simple, such as the Euler and RK2 methods seen here.  There are many types of differential equations, however, and many require specialized numerical solvers.  These solvers can also be very complicated. Thus, rather than writing our own solvers for each problem, it is good to find reliable packages of ODE solvers.","category":"page"},{"location":"sho/","page":"Simple Oscillator","title":"Simple Oscillator","text":"Julia has one of the best packages for solving ordinary differential  equations called DifferentialEquations.jl. ","category":"page"},{"location":"sho/#Example","page":"Simple Oscillator","title":"Example","text":"","category":"section"},{"location":"sho/","page":"Simple Oscillator","title":"Simple Oscillator","text":"Consider a driven oscillator with the equations of motion written in first-order form ","category":"page"},{"location":"sho/","page":"Simple Oscillator","title":"Simple Oscillator","text":"beginaligned\ndot y = u\ndot u = -100y + 8cos(9t)\nendaligned","category":"page"},{"location":"sho/","page":"Simple Oscillator","title":"Simple Oscillator","text":"This oscillator is driven at a frequency just under the natural frequency omega=10, so the solution will have beats.  The exact solution of this system has the form","category":"page"},{"location":"sho/","page":"Simple Oscillator","title":"Simple Oscillator","text":"y(t) = A cos(10 t) + B sin(10 t) + frac819cos(9 t)","category":"page"},{"location":"sho/","page":"Simple Oscillator","title":"Simple Oscillator","text":"where the constants A and B are determined by initial conditions.","category":"page"},{"location":"sho/","page":"Simple Oscillator","title":"Simple Oscillator","text":"The Jupyter notebook EulerMethod.ipynb demonstrates the Euler method to solve the ODE","category":"page"},{"location":"sho/#Going-Further","page":"Simple Oscillator","title":"Going Further","text":"","category":"section"},{"location":"tov/","page":"Stars","title":"Stars","text":"#TOV","category":"page"}]
}
